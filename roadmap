  


Part 1 — Arrays & Strings (1–100)
A. Fundamentals (Warm-up: counting, traversal, simple hashing)

1 Two Sum — 1 (Array, HashMap)
2 Contains Duplicate — 217 (Array, HashSet)
3 Valid Anagram — 242 (String, HashMap)
4 Plus One — 66 (Array Math)
5 Merge Sorted Array — 88 (Two Pointers, Merge)
6 Move Zeroes — 283 (Two Pointers)
7 Best Time to Buy and Sell Stock — 121 (Array, One Pass)
8 Majority Element — 169 (Boyer–Moore Voting)
9 Missing Number — 268 (Math, XOR)
10 Pascal’s Triangle — 118 (Array Construction)
11 Longest Common Prefix — 14 (String)
12 Reverse Words in a String — 151 (String)
13 Reverse Words in a String III — 557 (String)

B. Matrix Basics (straightforward simulations)

14 Transpose Matrix — 867 (Matrix)
15 Spiral Matrix — 54 (Matrix Traversal)
16 Spiral Matrix II — 59 (Matrix Construction)
17 Rotate Image — 48 (Matrix, In-place)

C. Two Pointers (start easy → classic mediums)

18 Valid Palindrome — 125 (Two Pointers)
19 Reverse String — 344 (Two Pointers)
20 Remove Duplicates from Sorted Array — 26 (Two Pointers)
21 Remove Element — 27 (Two Pointers)
22 Implement strStr() — 28 (String Matching)
23 Squares of a Sorted Array — 977 (Two Pointers)
24 3Sum — 15 (Two Pointers, Sorting)
25 3Sum Closest — 16 (Two Pointers)
26 4Sum — 18 (Two Pointers, Sorting)
27 Container With Most Water — 11 (Two Pointers)
28 Trapping Rain Water — 42 (Two Pointers, Prefix/Suffix)

D. Sliding Window (frequency maps → variable windows → deque)

29 Maximum Average Subarray I — 643 (Sliding Window)
30 Longest Substring Without Repeating Characters — 3 (Sliding Window, HashSet)
31 Minimum Size Subarray Sum — 209 (Sliding Window)
32 Permutation in String — 567 (Sliding Window, HashMap)
33 Find All Anagrams in a String — 438 (Sliding Window, HashMap)
34 Longest Repeating Character Replacement — 424 (Sliding Window)
35 Count Number of Nice Subarrays — 1248 (Sliding Window, Prefix)
36 Subarrays with K Different Integers — 992 (Sliding Window, HashMap)
37 Sliding Window Maximum — 239 (Monotonic Deque)
38 Longest Subarray of 1’s After Deleting One — 1493 (Sliding Window)

E. Prefix Sum & Kadane (fundamentals → tricky modulo)

39 Maximum Subarray — 53 (Kadane)
40 Subarray Product Less Than K — 713 (Sliding Window)
41 Find Pivot Index — 724 (Prefix Sum)
42 Range Sum Query – Immutable — 303 (Prefix Sum)
43 Range Sum Query 2D – Immutable — 304 (2D Prefix)
44 Subarray Sum Equals K — 560 (Prefix Sum, HashMap)
45 Continuous Subarray Sum — 523 (Prefix Sum, Mod)
46 Maximum Product Subarray — 152 (Kadane Variant)
47 Maximum Length of Repeated Subarray — 718 (DP / Binary Search & Hash rolling optional)
48 Minimum Value to Get Positive Step by Step Sum — 1413 (Prefix Sum)

F. Binary Search on Arrays (basic → rotated → answer-space)

49 Binary Search — 704 (Binary Search)
50 Search Insert Position — 35 (Binary Search)
51 Find First and Last Position of Element — 34 (Binary Search)
52 Search in Rotated Sorted Array — 33 (Binary Search)
53 Find Minimum in Rotated Sorted Array — 153 (Binary Search)
54 Find Minimum in Rotated Sorted Array II — 154 (Binary Search)
55 Find Peak Element — 162 (Binary Search)
56 Median of Two Sorted Arrays — 4 (Binary Search on Answer)
57 Split Array Largest Sum — 410 (Binary Search on Answer)
58 Koko Eating Bananas — 875 (Binary Search on Answer)

G. Greedy & Cyclic Sort & Extras (confidence builders)

59 Product of Array Except Self — 238 (Prefix Product)
60 Next Permutation — 31 (Greedy, Array)
61 Largest Number — 179 (Greedy, Sorting)
62 Rotate Function — 396 (Math, Array)
63 Increasing Triplet Subsequence — 334 (Greedy)
64 Longest Mountain in Array — 845 (Two Pointers)
65 Find All Duplicates in an Array — 442 (Cyclic Sort)
66 Find All Numbers Disappeared in an Array — 448 (Cyclic Sort)
67 Find the Duplicate Number — 287 (Floyd’s Cycle)
68 First Missing Positive — 41 (Cyclic Sort)
69 Max Consecutive Ones — 485 (Array)
70 Max Consecutive Ones II — 487 (Sliding Window)
71 Max Consecutive Ones III — 1004 (Sliding Window)
72 Maximum Sum Circular Subarray — 918 (Kadane Variant)

H. Classic Interview Mix (wrap-up set for A&S)

73 Jump Game — 55 (Greedy)
74 Jump Game II — 45 (Greedy / BFS thinking)
75 Gas Station — 134 (Greedy)
76 Candy — 135 (Greedy)
77 Number of Subarrays with Bounded Maximum — 795 (Sliding Window)
78 Count Binary Substrings — 696 (String, Counting)
79 Repeated Substring Pattern — 459 (String, KMP)
80 Add Binary — 67 (String Math)
81 Length of Last Word — 58 (String)
82 Valid Palindrome II — 680 (Two Pointers)
83 Valid Palindrome III — 1216 (DP)
84 Increasing Subsequences — 491 (Backtracking)
85 Minimum Window Substring — 76 (Sliding Window)
86 Palindromic Substrings — 647 (Expand / DP)
87 Longest Palindromic Substring — 5 (Expand / DP)
88 Palindrome Partitioning — 131 (Backtracking)
89 Palindrome Partitioning II — 132 (DP)
90 Word Break — 139 (DP, HashSet)
91 Word Break II — 140 (DP, Backtracking)
92 Restore IP Addresses — 93 (Backtracking)
93 Roman to Integer — 13 (HashMap)
94 Integer to Roman — 12 (Greedy)
95 Zigzag Conversion — 6 (String Simulation)
96 Longest Substring with At Most K Distinct Characters — 340 (Sliding Window)
97 Minimum Size Subarray in Circular Array — 1590 (Sliding Window)
98 Maximum Erasure Value — 1695 (Sliding Window, HashSet)
99 Subarray Sums Divisible by K — 974 (Prefix Sum, Mod)
100 Maximum Average Subarray I (review) — 643 (Sliding Window)

Part 2 — Linked List (101–160)
A. Absolute Basics (iteration, dummy nodes)

101 Reverse Linked List — 206 (Iterative & Recursive)
102 Merge Two Sorted Lists — 21 (Two Pointers)
103 Remove Linked List Elements — 203 (Dummy Node)
104 Delete Node in a Linked List — 237 (Pointer Manipulation)
105 Middle of the Linked List — 876 (Fast/Slow)
106 Remove Duplicates from Sorted List — 83 (Two Pointers)
107 Remove Duplicates from Sorted List II — 82 (Two Pointers, Dummy)
108 Convert Binary Number in a Linked List to Integer — 1290 (Iteration)

B. Fast/Slow Pointers (cycle, length tricks)

109 Palindrome Linked List — 234 (Fast/Slow + Reverse)
110 Linked List Cycle — 141 (Floyd)
111 Linked List Cycle II — 142 (Floyd, Entry)
112 Intersection of Two Linked Lists — 160 (Two Pointers)
113 Remove Nth Node From End of List — 19 (Two Pointers)
114 Swap Nodes in Pairs — 24 (Iterative / Recursive)
115 Rotate List — 61 (Two Pointers, Circular)
116 Odd Even Linked List — 328 (Rearrangement)
117 Partition List — 86 (Two Lists + Stitch)
118 Split Linked List in Parts — 725 (Iteration, Counting)

C. Merge / Sort / Arithmetic (building real skill)

119 Add Two Numbers — 2 (Elementary Math)
120 Add Two Numbers II — 445 (Stacks)
121 Merge k Sorted Lists — 23 (Heap / Divide & Conquer)
122 Sort List — 148 (Merge Sort on LL)
123 Insertion Sort List — 147 (LL Sorting)
124 Reorder List — 143 (Middle + Reverse + Merge)
125 Convert Sorted List to BST — 109 (Divide & Conquer)

D. Advanced Structure Manipulation

126 Copy List with Random Pointer — 138 (HashMap or O(1) trick)
127 Reverse Nodes in k-Group — 25 (Group Reversal)
128 Flatten a Multilevel Doubly Linked List — 430 (DFS on LL)
129 Design Linked List — 707 (Singly/Doubly Implementation)
130 Design Browser History — 1472 (Doubly Linked List)
131 Linked List Random Node — 382 (Reservoir Sampling)

E. Modern Interview LL (fresh mediums, still approachable)

132 Remove Zero Sum Consecutive Nodes — 1171 (Prefix Sum on LL)
133 Delete Middle Node of Linked List — 2095 (Two Pointers)
134 Maximum Twin Sum of a Linked List — 2130 (Middle + Reverse)
135 Merge Nodes in Between Zeros — 2181 (Aggregation)
136 Reverse Linked List II — 92 (Partial Reversal)

F. Light Review / Skill Lock-in (quick passes)

137 Palindrome Linked List (review) — 234 (Fast/Slow + Reverse)
138 Intersection of Two Linked Lists (review) — 160 (Two Pointers)
139 Linked List Cycle (review) — 141 (Floyd)
140 Linked List Cycle II (review) — 142 (Floyd Entry)
141 Remove Nth Node From End (review) — 19 (Two Pointers)
142 Rotate List (review) — 61 (Two Pointers)
143 Partition List (review) — 86 (Two Lists + Stitch)
144 Reorder List (review) — 143 (Reverse + Merge)
145 Sort List (review) — 148 (Merge Sort LL)
146 Merge k Sorted Lists (review) — 23 (Heap)
147 Add Two Numbers (review) — 2 (Math)
148 Add Two Numbers II (review) — 445 (Stacks)
149 Copy List with Random Pointer (review) — 138 (HashMap, O(1))
150 Reverse Nodes in k-Group (review) — 25 (Group Reversal)
151 Convert Sorted List to BST (review) — 109 (Recursion)
152 Odd Even Linked List (review) — 328 (Rearrangement)
153 Remove Duplicates I (review) — 83 (Two Pointers)
154 Remove Duplicates II (review) — 82 (Two Pointers, Dummy)
155 Split Linked List in Parts (review) — 725 (Counting)
156 Convert Binary LL to Integer (review) — 1290 (Iteration)
157 Insertion Sort List (review) — 147 (LL Sorting)
158 Design Linked List (review) — 707 (Implementation)
159 Design Browser History (review) — 1472 (Doubly)
160 Linked List Random Node (review) — 382 (Reservoir)


 Part 3: Stack & Queue (161–220)
A. Stack Basics (push/pop, simulation)

161 Valid Parentheses — 20 (Stack)
162 Min Stack — 155 (Stack, Design)
163 Implement Queue using Stacks — 232 (Stack Simulation)
164 Implement Stack using Queues — 225 (Queue Simulation)
165 Backspace String Compare — 844 (Stack, Two Pointers)
166 Remove Outermost Parentheses — 1021 (Stack, String)
167 Make The String Great — 1544 (Stack, String)

B. Monotonic Stack (next greater/smaller patterns)

168 Next Greater Element I — 496 (Monotonic Stack)
169 Next Greater Element II — 503 (Monotonic Stack, Circular)
170 Daily Temperatures — 739 (Monotonic Stack)
171 Final Prices With a Special Discount in a Shop — 1475 (Monotonic Stack)
172 Next Greater Element in Linked List — 1019 (Monotonic Stack, Linked List)
173 Online Stock Span — 901 (Monotonic Stack)
174 132 Pattern — 456 (Monotonic Stack)
175 Maximum Width Ramp — 962 (Monotonic Stack)
176 Sum of Subarray Minimums — 907 (Monotonic Stack, DP)
177 Remove K Digits — 402 (Monotonic Stack, Greedy)

C. Queue Fundamentals (simple queues & circular designs)

178 Number of Recent Calls — 933 (Queue, Sliding Window)
179 Design Circular Queue — 622 (Queue, Design)
180 Design Circular Deque — 641 (Deque, Design)
181 Time Needed to Buy Tickets — 2073 (Queue, Simulation)
182 Dota2 Senate — 649 (Queue)
183 Number of Students Unable to Eat Lunch — 1700 (Queue, Simulation)

D. BFS on Grids/States (intro → multi-source → weighted via deque)

184 Number of Islands — 200 (BFS/DFS, Grid)
185 Rotting Oranges — 994 (BFS, Grid)
186 01 Matrix — 542 (BFS, Multi-Source)
187 Shortest Path in Binary Matrix — 1091 (BFS, Grid)
188 Open the Lock — 752 (BFS, State Space)
189 Minimum Genetic Mutation — 433 (BFS, Strings)
190 Shortest Bridge — 934 (BFS/DFS, Grid)
191 As Far from Land as Possible — 1162 (BFS, Multi-Source)

E. Topological Sort / Kahn (queues for order)

192 Course Schedule — 207 (Topo Sort, BFS)
193 Course Schedule II — 210 (Topo Sort, BFS)
194 Minimum Height Trees — 310 (Topo-like Trimming)
195 Sort Items by Groups Respecting Dependencies — 1203 (Topo Sort)

F. Deque / Monotonic Queue (window optimization)

196 Sliding Window Maximum — 239 (Deque, Monotonic Queue)
197 Shortest Subarray with Sum at Least K — 862 (Deque, Prefix Monotone)
198 Max Value of Equation — 1499 (Deque, Monotonic)
199 Sum of Subarray Ranges — 2104 (Monotonic Stack/Deque)

G. Parsing / Calculators (stack for expressions)

200 Evaluate Reverse Polish Notation — 150 (Stack, Eval)
201 Basic Calculator II — 227 (Stack, Parsing)
202 Remove All Adjacent Duplicates in String — 1047 (Stack)
203 Remove All Adjacent Duplicates in String II — 1209 (Monotonic Stack)
204 Minimum Remove to Make Valid Parentheses — 1249 (Stack, String)

H. Mixed Stack/Queue Practice (confidence set)

205 Simplify Path — 71 (Stack, String)
206 Asteroid Collision — 735 (Stack, Simulation)
207 Next Greater Element III — 556 (Stack + Math)
208 Circular Sentence — 2490 (Queue/String warm-up)
209 Maximum Frequency Stack — 895 (Stack, HashMap)
210 Validate Stack Sequences — 946 (Stack Simulation)
211 Baseball Game — 682 (Stack, Simulation)
212 Minimum Add to Make Parentheses Valid — 921 (Stack)
213 Check If Word Is Valid After Substitutions — 1003 (Stack)
214 Minimum Time to Make Rope Colorful — 1578 (Greedy, Stack-ish)
215 Remove Duplicate Letters — 316 (Monotonic Stack, Greedy)
216 Maximum Nesting Depth of the Parentheses — 1614 (Stack, Count)
217 Next Greater Element IV (skip hard) → use review set instead: Next Greater (496/503/556)
218 Reveal Cards In Increasing Order — 950 (Queue Simulation)
219 Design Front Middle Back Queue — 1670 (Deque, Design)
220 Number of Students Doing Homework at a Given Time — 1450 (Queue thinking)

Part 4: HashMap & HashSet (221–285)
A. Counting & Basic Maps (string/array frequency)

221 First Unique Character in a String — 387 (HashMap)
222 Ransom Note — 383 (HashMap)
223 Isomorphic Strings — 205 (HashMap)
224 Word Pattern — 290 (HashMap)
225 Find the Difference — 389 (Counting / HashMap)
226 Valid Anagram — 242 (HashMap, Sorting)
227 Longest Palindrome — 409 (HashMap)
228 Unique Email Addresses — 929 (HashSet, Normalize)
229 Jewels and Stones — 771 (HashSet, Counting)

B. Grouping & Signature Hashing (canonical forms)

230 Group Anagrams — 49 (HashMap, Sorting)
231 Group Shifted Strings — 249 (HashMap, String Signature)
232 Group Special-Equivalent Strings — 893 (HashMap, Signature)
233 Find Anagram Mappings — 760 (HashMap)

C. Subarray Hashing & Prefix Tricks (core interview set)

234 Subarray Sum Equals K — 560 (Prefix Sum + HashMap)
235 Continuous Subarray Sum — 523 (Prefix Sum + Mod)
236 Subarray Sums Divisible by K — 974 (Prefix + Mod)
237 Binary Subarrays With Sum — 930 (Prefix + HashMap)
238 Count Number of Nice Subarrays — 1248 (Prefix/Window)
239 Longest Substring Without Repeating Characters — 3 (Sliding Window + Map)
240 Longest Substring with At Most K Distinct Characters — 340 (Window + Map)
241 Longest Repeating Character Replacement — 424 (Window + Count)
242 Minimum Window Substring — 76 (Window + Count)
243 Find All Anagrams in a String — 438 (Window + Count)

D. Set Logic & Lookup (presence/ordering with sets)

244 Contains Duplicate — 217 (HashSet)
245 Contains Duplicate II — 219 (HashMap/Window)
246 Contains Duplicate III — 220 (TreeSet/Ordered Map)
247 Intersection of Two Arrays — 349 (HashSet)
248 Intersection of Two Arrays II — 350 (HashMap)
249 Longest Consecutive Sequence — 128 (HashSet, O(n))

E. Hashing-Based Design (maps + arrays/lists)

250 Two Sum — 1 (HashMap)
251 Randomized Set — 380 (HashMap + Array)
252 Insert Delete GetRandom O(1) — Duplicates allowed — 381 (HashMap + Array)
253 Valid Sudoku — 36 (HashSet in 3 dimensions)
254 LRU Cache — 146 (LinkedHashMap / DLL + HashMap)
255 Design Underground System — 1396 (HashMap, Design)
256 Time Based Key-Value Store — 981 (HashMap + Binary Search)
257 Logger Rate Limiter — 359 (HashMap) (Premium—optional)
258 Design Authentication Manager — 1797 (HashMap, TTL)
259 Design a Leaderboard — 1244 (HashMap, Heaps)

F. Word Problems (maps + tries crossover)

260 Word Break — 139 (DP + HashSet)
261 Word Break II — 140 (DP + Backtracking + HashSet)
262 Replace Words — 648 (Trie + HashSet)
263 Palindrome Pairs — 336 (Trie/HashMap hybrid)
264 Concatenated Words — 472 (Trie + HashSet)

G. Extra Map Patterns (finishing touches)

265 Degree of an Array — 697 (HashMap)
266 Minimum Index Sum of Two Lists — 599 (HashMap)
267 Find Duplicate File in System — 609 (HashMap, String Parse)
268 Bulls and Cows — 299 (HashMap, Counting)
269 Valid Palindrome II — 680 (Two Pointers, Map-lite)
270 Longest Harmonious Subsequence — 594 (HashMap)
271 Number of Boomerangs — 447 (HashMap, Geometry)
272 Max Points on a Line — 149 (HashMap, Geometry)
273 Substrings That Differ by One Character — 1638 (Hashing/DP)
274 Count Good Meals — 1711 (HashMap, Powers of Two)
275 Count Pairs of Interchangeable Rectangles — 2001 (HashMap, Ratios)
276 Number of Good Pairs — 1512 (Counting)
277 Determine if Two Strings Are Close — 1657 (Counting, Multiset)
278 Check If N and Its Double Exist — 1346 (HashSet)
279 K-diff Pairs in an Array — 532 (HashMap/Set)
280 Find Players With Zero or One Losses — 2225 (Maps)
281 Count Elements With Strictly Smaller and Greater — 2148 (Counting)
282 Maximum Number of Balloons — 1189 (Counting)
283 Sort Characters By Frequency — 451 (HashMap + Heap)
284 Top K Frequent Elements — 347 (HashMap + Heap)
285 Top K Frequent Words — 692 (HashMap + Heap)


Part 5: Trees (286–375)
A. Traversal Fundamentals (build muscle memory first)

286 Same Tree — 100 (DFS, Recursion)
287 Symmetric Tree — 101 (DFS/BFS)
288 Maximum Depth of Binary Tree — 104 (DFS)
289 Minimum Depth of Binary Tree — 111 (BFS/DFS)
290 Invert Binary Tree — 226 (DFS/BFS)
291 Binary Tree Preorder Traversal — 144 (Iterative/Recursive)
292 Binary Tree Inorder Traversal — 94 (Iterative/Recursive)
293 Binary Tree Postorder Traversal — 145 (Iterative/Recursive)
294 Binary Tree Level Order Traversal — 102 (BFS)
295 Binary Tree Level Order Traversal II — 107 (BFS)

B. BFS/Views & Simple Properties (read trees layer-wise)

296 Binary Tree Zigzag Level Order Traversal — 103 (BFS)
297 Binary Tree Right Side View — 199 (BFS)
298 Average of Levels in Binary Tree — 637 (BFS)
299 Find Largest Value in Each Tree Row — 515 (BFS)
300 Find Bottom Left Tree Value — 513 (BFS)
301 Check Completeness of a Binary Tree — 958 (BFS)

C. Root-to-Leaf & Path Sums (classic recursion set)

302 Path Sum — 112 (DFS)
303 Path Sum II — 113 (DFS + Backtracking)
304 Path Sum III — 437 (Prefix Sum on Tree)
305 Binary Tree Paths — 257 (DFS)
306 Sum of Left Leaves — 404 (DFS)
307 Sum Root to Leaf Numbers — 129 (DFS)
308 Pseudo-Palindromic Paths in a Binary Tree — 1457 (DFS + Bitmask)
309 Maximum Difference Between Node and Ancestor — 1026 (DFS)

D. Shape/Counts & Simple Transforms

310 Count Complete Tree Nodes — 222 (Binary Search/DFS)
311 Merge Two Binary Trees — 617 (DFS)
312 Binary Tree Tilt — 563 (DFS)
313 Balanced Binary Tree — 110 (DFS)
314 Leaf-Similar Trees — 872 (DFS)
315 Subtree of Another Tree — 572 (DFS + String Hashing optional)
316 Construct String from Binary Tree — 606 (DFS)
317 Add One Row to Tree — 623 (BFS/DFS)
318 Univalued Binary Tree — 965 (DFS)

E. Build / Construct Trees (great recursion practice)

319 Construct Binary Tree from Preorder and Inorder Traversal — 105 (Recursion)
320 Construct Binary Tree from Inorder and Postorder Traversal — 106 (Recursion)
321 Construct Binary Tree from Preorder and Postorder Traversal — 889 (Recursion)
322 Maximum Binary Tree — 654 (Divide & Conquer)
323 Maximum Binary Tree II — 998 (Divide & Conquer)
324 All Possible Full Binary Trees — 894 (DP/Recursion)

F. BST Basics (properties + traversal)

325 Validate Binary Search Tree — 98 (DFS/Inorder)
326 Range Sum of BST — 938 (DFS)
327 Minimum Distance Between BST Nodes — 783 (Inorder)
328 Increasing Order Search Tree — 897 (Inorder, Rewire)
329 Convert BST to Greater Tree — 538 (Reverse Inorder)
330 Convert BST to Greater Sum Tree — 1038 (Reverse Inorder)
331 Kth Smallest Element in a BST — 230 (Inorder + Count)
332 Two Sum IV – Input is a BST — 653 (BST + Set/Two Pointers)

G. BST Operations & Iterators (core interview ops)

333 Lowest Common Ancestor of a BST — 235 (BST property)
334 Lowest Common Ancestor of a Binary Tree — 236 (DFS)
335 Delete Node in a BST — 450 (BST ops)
336 Binary Search Tree Iterator — 173 (Stack/Inorder)
337 Increasing BST (review) — 897 (Inorder)
338 All Elements in Two Binary Search Trees — 1305 (Merging Inorders)
339 Convert Sorted Array to Binary Search Tree — 108 (Divide & Conquer)
340 Construct Binary Search Tree from Preorder Traversal — 1008 (BST Insert/Bounds)

H. More Views, Widths, and Cousins (BFS patterns)

341 Binary Tree Vertical Order Traversal — 314 (BFS + Column Index) (Premium)
342 Maximum Width of Binary Tree — 662 (BFS + Indexing)
343 Cousins in Binary Tree — 993 (BFS/DFS)
344 Binary Tree Coloring Game — 1145 (Counting Subtrees)
345 Find Distance in a Binary Tree — 1740 (Build graph + BFS)

I. Rewiring / Flatten / Rebuild (pointer work)

346 Flatten Binary Tree to Linked List — 114 (Reverse Preorder)
347 Increasing Order Search Tree (review) — 897 (Rewire)
348 Delete Nodes and Return Forest — 1110 (DFS + Set)
349 Recover a Tree From Preorder Traversal — 1028 (Stack/Recursion)
350 Binary Tree Pruning — 814 (DFS prune)

J. N-ary Trees (quick coverage)

351 N-ary Tree Preorder Traversal — 589 (DFS)
352 N-ary Tree Postorder Traversal — 590 (DFS)
353 N-ary Tree Level Order Traversal — 429 (BFS)
354 Maximum Depth of N-ary Tree — 559 (DFS)
355 Diameter of N-ary Tree — 1522 (DFS)

K. Mixed Practice / Confidence Set (all Easy/Medium)

356 Increasing BST (final quick pass) — 897 (Inorder)
357 Find Mode in Binary Search Tree — 501 (Inorder + Counting)
358 Smallest Subtree with All the Deepest Nodes — 865 (DFS depths)
359 Path In Zigzag Labeled Binary Tree — 1104 (Math/Tree)
360 Binary Tree Level Order Successor — 102 (BFS variant)
361 Lowest Common Ancestor of Deepest Leaves — 1123 (DFS)
362 Sum of Nodes with Even-Valued Grandparent — 1315 (DFS)
363 Maximum Level Sum of a Binary Tree — 1161 (BFS)
364 Deepest Leaves Sum — 1302 (BFS/DFS)
365 Step-By-Step Directions From a Binary Tree Node to Another — 2096 (LCA + Paths)
366 Amount of Time for Binary Tree to Be Infected — 2385 (Tree to Graph + BFS)
367 Create Binary Tree From Descriptions — 2196 (HashMap + Build)
368 Construct Binary Tree from Level Order Traversal (closest: CBT Inserter) — 919 (Design + Tree)
369 CBT Inserter — 919 (Queue + Tree)
370 Maximum Binary Tree (review) — 654 (Divide & Conquer)
371 Add One Row to Tree (review) — 623 (BFS/DFS)
372 Binary Tree Zigzag Level Order (review) — 103 (BFS)
373 Right Side View (review) — 199 (BFS)
374 Validate BST (review) — 98 (DFS/Inorder)
375 Kth Smallest in BST (review) — 230 (Inorder + Count)

Part 6: Graphs (376–455)
A. Graph Representation & Traversal (adjacency lists, DFS/BFS, prerequisites)

376 Clone Graph — 133 (DFS/BFS, Graph)
377 Find if Path Exists in Graph — 1971 (DFS/BFS, Connectivity)
378 All Paths From Source to Target — 797 (DFS, DAG)
379 Keys and Rooms — 841 (DFS/BFS, Reachability)
380 Find Center of Star Graph — 1791 (Degree Insight)
381 Find the Town Judge — 997 (In/Out-Degree)
382 Course Schedule IV — 1462 (Topo/Reachability in DAG)
383 Possible Bipartition — 886 (Bipartite via BFS/DFS)
384 Is Graph Bipartite? — 785 (Bipartite via BFS/DFS)
385 Find Eventual Safe States — 802 (Reverse Graph / Outdegree)
386 Evaluate Division — 399 (Graph Build + DFS/BFS)
387 Reconstruct Itinerary — 332 (Eulerian Path, Hierholzer/Stack)
388 Loud and Rich — 851 (Graph + Topo/DFS)
389 Minimum Number of Vertices to Reach All Nodes — 1557 (Indegree Set)

B. Grid Graphs (DFS/BFS on grids; flood-fill patterns)

390 Max Area of Island — 695 (DFS/BFS, Grid)
391 Island Perimeter — 463 (DFS/BFS, Grid)
392 Surrounded Regions — 130 (DFS/BFS, Border Flood)
393 Pacific Atlantic Water Flow — 417 (BFS/DFS from Borders)
394 Number of Enclaves — 1020 (DFS/BFS, Grid)
395 Flood Fill — 733 (DFS/BFS, Grid)
396 Count Sub Islands — 1905 (DFS/BFS, Grid Compare)
397 Path With Maximum Gold — 1219 (Backtracking on Grid)
398 Number of Closed Islands — 1254 (DFS/BFS, Grid)
399 Coloring A Border — 1034 (BFS/DFS, Grid)
400 Number of Distinct Islands — 694 (DFS + Shape Canonicalization)

C. Topological Sort & DAG Patterns (Kahn’s, dependency ordering)

401 Course Schedule IV — 1462 (Topo/Reachability)
402 Find All Possible Recipes from Given Supplies — 2115 (Topo on Dependency Graph)
403 Minimum Number of Vertices to Reach All Nodes — 1557 (Indegree 0 Set)
404 Sequence Reconstruction — 444 (Topo Order Uniqueness)
405 Alien Dictionary — 269 (Topo from Lexicographic Pairs)
406 Course Schedule (review via concepts only is earlier) → skip duplicate problems

D. Union–Find / Disjoint Set Union (merging, components)

407 Number of Provinces — 547 (DSU/DFS)
408 Redundant Connection — 684 (DSU, Cycle Detection)
409 Accounts Merge — 721 (DSU + Map)
410 Smallest String With Swaps — 1202 (DSU + Sort Components)
411 Satisfiability of Equality Equations — 990 (DSU on Variables)
412 Most Stones Removed with Same Row or Column — 947 (DSU on Rows/Cols)
413 Regions Cut by Slashes — 959 (DSU on Subcells)
414 Earliest Moment When Everyone Become Friends — 1101 (DSU + Timestamps)
415 Graph Valid Tree — 261 (DSU, Connectivity)
416 Number of Operations to Make Network Connected — 1319 (DSU, Extra Edges)

E. Shortest Paths, MST & Tree-on-Graph (BFS/Dijkstra/Prim/Floyd)

417 Network Delay Time — 743 (Dijkstra / Heap)
418 Cheapest Flights Within K Stops — 787 (Bellman-Ford / BFS layering)
419 Path With Minimum Effort — 1631 (Dijkstra on Grid)
420 Path With Maximum Probability — 1514 (Max-Heap Dijkstra)
421 Minimum Cost to Connect All Points — 1584 (Prim’s MST)
422 Find the City With the Smallest Number of Neighbors at a Threshold Distance — 1334 (Floyd/Dijkstra)
423 The Maze — 490 (BFS with rolling)
424 The Maze II — 505 (Dijkstra on Grid with rolling)
425 Map of Highest Peak — 1765 (Multi-Source BFS)
426 Minimum Fuel Cost to Report to the Capital — 2477 (Tree DFS on Roads)
427 Minimum Time to Collect All Apples in a Tree — 1443 (Tree DFS Accumulation)
428 Reachable Nodes With Restrictions — 2368 (Graph + BFS/DFS)
429 Minimum Knight Moves — 1197 (BFS on Infinite Grid)
430 Tree Diameter — 1245 (Two BFS/DFS on Tree)
431 Closest Node to Given Two Nodes — 2359 (Multi-source Distances)
432 The Network Becomes Idle — 2039 (BFS + Round-trip Time)
433 K-Similar Strings (skip; hard) → already excluded
434 Connecting Cities With Minimum Cost — 1135 (Kruskal MST)

F. Construction, Constraints & Misc Graph Tasks (mixed techniques)

435 Reorder Routes to Make All Paths Lead to the City Zero — 1466 (DFS/BFS + Direction Fix)
436 Restore the Array From Adjacent Pairs — 1743 (Graph Build + DFS)
437 Destination City — 1436 (In/Out-Degree Insight)
438 Find All Groups of Farmland — 1992 (Grid Components)
439 All Ancestors of a Node in a Directed Acyclic Graph — 2192 (Topo/DP)
440 Maximum Employees to Be Invited to a Meeting — 2127 (Cycle + Tail Trees)
441 Minimum Score of a Path Between Two Cities — 2492 (MST/BFS Insight)
442 Shortest Path with Alternating Colors — 1129 (BFS with Color State)
443 Minimum Jumps to Reach Home — 1654 (BFS with State)
444 Jump Game IV — 1345 (BFS on Value-Index Graph)
445 Snakes and Ladders — 909 (BFS on Board Graph)
446 Minimum Operations to Convert Number — 2059 (BFS over Integers)
447 Nearest Exit from Entrance in Maze — 1926 (BFS on Grid)
448 Count Servers That Communicate — 1267 (Graph Degree by Rows/Cols)
449 Count Subtrees With Same Label — 1519 (Tree DFS + Counts)
450 Longest Path With Different Adjacent Characters — 2246 (Tree DFS on Directed Graph)
451 Maximal Network Rank — 1615 (Graph Degree + Count)
452 Kill Process — 582 (Tree/Graph BFS/Map)
453 Find the Celebrity — 277 (Graph Query Logic)
454 Minimum Score of a Path Between Two Cities (review) — 2492 (Graph Insight)
455 Longest Cycle in a Graph — 2360 (Cycle Detection in Directed Graph)

Part 7: Dynamic Programming (456–555)
A. 1D DP Basics (stairs → robber → simple transitions)

456 Climbing Stairs — 70 (1D DP)
457 Min Cost Climbing Stairs — 746 (1D DP)
458 Fibonacci Number — 509 (1D DP)
459 House Robber — 198 (1D DP)
460 House Robber II — 213 (1D DP, Circular)
461 Delete and Earn — 740 (1D DP, Value Compression)
462 Longest Arithmetic Subsequence of Given Difference — 1218 (Hash DP)

B. Increasing/Subsequence DP (LIS family → variants)

463 Longest Increasing Subsequence — 300 (LIS, Patience/DP)
464 Number of Longest Increasing Subsequences — 673 (DP)
465 Largest Divisible Subset — 368 (DP + Sort)
466 Maximum Length of Pair Chain — 646 (Greedy/DP)
467 Best Team With No Conflicts — 1626 (Sort + DP)

C. Stock DP (classic transitions)

468 Best Time to Buy and Sell Stock with Cooldown — 309 (State DP)
469 Best Time to Buy and Sell Stock with Transaction Fee — 714 (State DP)

D. Knapsack / Subset DP (0/1, unbounded, count ways)

470 Coin Change — 322 (Unbounded Knapsack)
471 Coin Change II — 518 (Count Ways)
472 Combination Sum IV — 377 (Order Matters DP)
473 Partition Equal Subset Sum — 416 (0/1 Knapsack)
474 Target Sum — 494 (Transform to Subset Sum)
475 Last Stone Weight II — 1049 (Subset Sum)
476 Ones and Zeroes — 474 (2D Knapsack)

E. Classic 1D/Sequence DP (decoding, arithmetic, counting)

477 Decode Ways — 91 (Digit DP)
478 Integer Break — 343 (Break/Max Product DP)
479 Count Vowels Permutation — 1220 (State DP)
480 Number of Dice Rolls With Target Sum — 1155 (Count DP)
481 Arithmetic Slices — 413 (1D DP)
482 Arithmetic Subsequences — 446 (Hash DP)

F. 2D Grid DP (paths, sums, shapes)

483 Unique Paths — 62 (Grid DP)
484 Unique Paths II — 63 (Grid DP with Obstacles)
485 Minimum Path Sum — 64 (Grid DP)
486 Triangle — 120 (Bottom-Up DP)
487 Minimum Falling Path Sum — 931 (Grid DP)
488 Count Square Submatrices with All Ones — 1277 (2D DP)
489 Maximal Square — 221 (2D DP)
490 Knight Probability in Chessboard — 688 (2D DP / Transitions)
491 Largest Plus Sign — 764 (Directional DP)
492 2 Keys Keyboard — 650 (State DP)

G. String DP (edit distance, interleave, LCS/LPS, deletions)

493 Edit Distance — 72 (2D DP)
494 Interleaving String — 97 (2D DP)
495 Longest Common Subsequence — 1143 (2D DP)
496 Longest Palindromic Subsequence — 516 (2D DP)
497 Delete Operation for Two Strings — 583 (LCS-based DP)
498 Uncrossed Lines — 1035 (LCS Variant)
499 Minimum ASCII Delete Sum for Two Strings — 712 (2D DP)
500 Is Subsequence — 392 (Greedy/DP)

H. Interval / Game / Minimax DP (ranges, choices)

501 Minimum Score Triangulation of Polygon — 1039 (Interval DP)
502 Predict the Winner — 486 (Interval/Minimax DP)
503 Stone Game — 877 (Game DP)
504 Stone Game II — 1140 (Game DP)
505 Can I Win — 464 (Memoization, Bitmask)
506 Guess Number Higher or Lower II — 375 (Interval DP)
507 Soup Servings — 808 (Probability DP)

I. Partitioning / Schedules / Weighted Picks (cut & choose)

508 Partition Array for Maximum Sum — 1043 (DP on Index)
509 Minimum Cost For Tickets — 983 (Date DP)
510 Largest Sum of Averages — 813 (Partition DP)
511 Longest String Chain — 1048 (Sort + DP)
512 Maximum Score from Performing Multiplication Operations — 1770 (2D DP)

J. Extra Solid DP Practice (modern mediums, still approachable)

513 Domino and Tromino Tiling — 790 (1D/2D DP)
514 Minimum Swaps To Make Sequences Increasing — 801 (State DP)
515 Shopping Offers — 638 (DFS + Memo)
516 Count Number of Ways to Place Houses — 2320 (Combinatorics DP)
517 Minimum Path Cost in a Grid — 2304 (Grid DP + Cost)
518 Maximum Alternating Subsequence Sum — 1911 (State DP)
519 Largest Sum of Averages — 813 (Partition DP, review)
520 Maximum Score From Performing Multiplication Operations — 1770 (2D DP, review)
521 Maximum Score of Spliced Array — 2321 (Kadane/DP)
522 Longest Arithmetic Subsequence — 1027 (DP)
523 Toss Strange Coins — 1230 (Probability DP)
524 Count Sorted Vowel Strings — 1641 (DP/Combinatorics)
525 Filling Bookcase Shelves — 1105 (DP on Width)
526 Solving Questions With Brainpower — 2140 (Reverse DP)
527 Count Ways To Build Good Strings — 2466 (1D DP)
528 Number of Distinct Roll Sequences — 2318 (State DP)
529 Egg Drop With 2 Eggs and N Floors — 1884 (DP/Math)
530 Paint House — 256 (Row DP)
531 Count All Possible Routes — 1575 (Memoization)
532 The Number of Beautiful Subsets — 2597 (Backtrack + DP)
533 Integer Replacement — 397 (Memoization)
534 Sort Integers by The Power Value — 1387 (DP on Collatz)
535 Dice Roll Simulation — 1223 (Constrained DP)
536 Knight Dialer — 935 (State DP on Graph)
537 Count Number of Texts — 2266 (Digit/State DP)
538 Largest Submatrix With Rearrangements — 1727 (Row Heights + DP)
539 Check if There Is a Valid Partition For The Array — 2369 (1D DP)
540 Out of Boundary Paths — 576 (Grid + Mod DP)
541 Maximum Subarray Sum with One Deletion — 1186 (Kadane + DP)
542 Paint Fence — 276 (State DP)
543 Paths in Matrix Whose Sum Is Divisible by K — 2435 (3D DP: i,j,mod)
544 Length of Longest Fibonacci Subsequence — 873 (Hash DP)
545 Jump Game VII — 1871 (Window/DP)
546 Stone Game VII — 1690 (Interval DP)
547 Maximum Sum of Two Non-Overlapping Subarrays — 1031 (Prefix + DP)
548 Number of Ways to Reach a Position After Exactly k Steps — 2400 (Combinatorics/DP)
549 N-th Tribonacci Number — 1137 (1D DP)
550 Longest Ideal Subsequence — 2370 (Char State DP)
551 Maximum Profit in Job Scheduling — 1235 (DP + Binary Search)
552 Maximum Earnings From Taxi — 2008 (DP + Binary Search)
553 Number of Beautiful Partitions — 2478 (String DP)
554 Number of Ways to Earn Points — 2585 (Knapsack Count DP)
555 Count Ways to Group Overlapping Ranges — 2580 (Combinatorics/DP)

