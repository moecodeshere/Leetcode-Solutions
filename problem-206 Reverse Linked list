/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseList(ListNode head) {
        Stack<ListNode> mostack = new Stack<>();
        ListNode current = head;
        if (head == null || head.next == null) {
    return head;
}
        while(current!=null){  //we filled the stack
            mostack.push(current);
            current=current.next;
        }
        //now we need to place top elemnt in current and pop and update current to next and
        head= mostack.pop();
        current=head;
        while(!mostack.isEmpty()){
            current.next=mostack.pop();
            current = current.next;
        }
        current.next=null;
        return head;
    }
}
